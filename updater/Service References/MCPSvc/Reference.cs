//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PatchClient.MCPSvc {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MCPSvc.MCPSvcSoap")]
    public interface MCPSvcSoap {
        
        // CODEGEN: Generating message contract since message GetMCPManifestRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMCPManifest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PatchClient.MCPSvc.GetMCPManifestResponse GetMCPManifest(PatchClient.MCPSvc.GetMCPManifestRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMCPManifest", ReplyAction="*")]
        System.Threading.Tasks.Task<PatchClient.MCPSvc.GetMCPManifestResponse> GetMCPManifestAsync(PatchClient.MCPSvc.GetMCPManifestRequest request);
        
        // CODEGEN: Generating message contract since message UpdateMCPStateRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateMCPState", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PatchClient.MCPSvc.UpdateMCPStateResponse UpdateMCPState(PatchClient.MCPSvc.UpdateMCPStateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateMCPState", ReplyAction="*")]
        System.Threading.Tasks.Task<PatchClient.MCPSvc.UpdateMCPStateResponse> UpdateMCPStateAsync(PatchClient.MCPSvc.UpdateMCPStateRequest request);
        
        // CODEGEN: Generating message contract since message ConfirmMCPforProcessingRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConfirmMCPforProcessing", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        PatchClient.MCPSvc.ConfirmMCPforProcessingResponse ConfirmMCPforProcessing(PatchClient.MCPSvc.ConfirmMCPforProcessingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ConfirmMCPforProcessing", ReplyAction="*")]
        System.Threading.Tasks.Task<PatchClient.MCPSvc.ConfirmMCPforProcessingResponse> ConfirmMCPforProcessingAsync(PatchClient.MCPSvc.ConfirmMCPforProcessingRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class AuthHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string tokenField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
                this.RaisePropertyChanged("token");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ConfirmMCPResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool processableField;
        
        private SOAPResponseModel resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Processable {
            get {
                return this.processableField;
            }
            set {
                this.processableField = value;
                this.RaisePropertyChanged("Processable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public SOAPResponseModel Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("Result");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class SOAPResponseModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool successField;
        
        private string reasonField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
                this.RaisePropertyChanged("Success");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
                this.RaisePropertyChanged("Reason");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MCPStatusResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private MCPStatus statusField;
        
        private SOAPResponseModel resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public MCPStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public SOAPResponseModel Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("Result");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum MCPStatus {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Assigned,
        
        /// <remarks/>
        Cancelled,
        
        /// <remarks/>
        Downloading,
        
        /// <remarks/>
        Downloaded,
        
        /// <remarks/>
        Updating,
        
        /// <remarks/>
        Updated,
        
        /// <remarks/>
        Rebooting,
        
        /// <remarks/>
        Rebooted,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MachineConfigPackageModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int mCPIDField;
        
        private System.DateTime createdField;
        
        private string mCPNameField;
        
        private string versionMajorField;
        
        private string versionMinorField;
        
        private int mCPLevelField;
        
        private ScheduleLevel scheduleLevelField;
        
        private int createdByField;
        
        private string blobKeyField;
        
        private byte[] fileDataField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int MCPID {
            get {
                return this.mCPIDField;
            }
            set {
                this.mCPIDField = value;
                this.RaisePropertyChanged("MCPID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
                this.RaisePropertyChanged("Created");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string MCPName {
            get {
                return this.mCPNameField;
            }
            set {
                this.mCPNameField = value;
                this.RaisePropertyChanged("MCPName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string VersionMajor {
            get {
                return this.versionMajorField;
            }
            set {
                this.versionMajorField = value;
                this.RaisePropertyChanged("VersionMajor");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string VersionMinor {
            get {
                return this.versionMinorField;
            }
            set {
                this.versionMinorField = value;
                this.RaisePropertyChanged("VersionMinor");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int MCPLevel {
            get {
                return this.mCPLevelField;
            }
            set {
                this.mCPLevelField = value;
                this.RaisePropertyChanged("MCPLevel");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public ScheduleLevel ScheduleLevel {
            get {
                return this.scheduleLevelField;
            }
            set {
                this.scheduleLevelField = value;
                this.RaisePropertyChanged("ScheduleLevel");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
                this.RaisePropertyChanged("CreatedBy");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string BlobKey {
            get {
                return this.blobKeyField;
            }
            set {
                this.blobKeyField = value;
                this.RaisePropertyChanged("BlobKey");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=9)]
        public byte[] FileData {
            get {
                return this.fileDataField;
            }
            set {
                this.fileDataField = value;
                this.RaisePropertyChanged("FileData");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum ScheduleLevel {
        
        /// <remarks/>
        Standard,
        
        /// <remarks/>
        Critical,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class MCPManifestResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private MachineConfigPackageModel[] mCPManifestField;
        
        private SOAPResponseModel resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public MachineConfigPackageModel[] MCPManifest {
            get {
                return this.mCPManifestField;
            }
            set {
                this.mCPManifestField = value;
                this.RaisePropertyChanged("MCPManifest");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public SOAPResponseModel Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("Result");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMCPManifest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetMCPManifestRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public PatchClient.MCPSvc.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sSerialNumber;
        
        public GetMCPManifestRequest() {
        }
        
        public GetMCPManifestRequest(PatchClient.MCPSvc.AuthHeader AuthHeader, string sSerialNumber) {
            this.AuthHeader = AuthHeader;
            this.sSerialNumber = sSerialNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMCPManifestResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetMCPManifestResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public PatchClient.MCPSvc.MCPManifestResponse GetMCPManifestResult;
        
        public GetMCPManifestResponse() {
        }
        
        public GetMCPManifestResponse(PatchClient.MCPSvc.MCPManifestResponse GetMCPManifestResult) {
            this.GetMCPManifestResult = GetMCPManifestResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateMCPState", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateMCPStateRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public PatchClient.MCPSvc.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sSerialNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int iMCPID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public PatchClient.MCPSvc.MCPStatus sState;
        
        public UpdateMCPStateRequest() {
        }
        
        public UpdateMCPStateRequest(PatchClient.MCPSvc.AuthHeader AuthHeader, string sSerialNumber, int iMCPID, PatchClient.MCPSvc.MCPStatus sState) {
            this.AuthHeader = AuthHeader;
            this.sSerialNumber = sSerialNumber;
            this.iMCPID = iMCPID;
            this.sState = sState;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateMCPStateResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateMCPStateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public PatchClient.MCPSvc.MCPStatusResponse UpdateMCPStateResult;
        
        public UpdateMCPStateResponse() {
        }
        
        public UpdateMCPStateResponse(PatchClient.MCPSvc.MCPStatusResponse UpdateMCPStateResult) {
            this.UpdateMCPStateResult = UpdateMCPStateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConfirmMCPforProcessing", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ConfirmMCPforProcessingRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public PatchClient.MCPSvc.AuthHeader AuthHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string sSerial;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int iMCPID;
        
        public ConfirmMCPforProcessingRequest() {
        }
        
        public ConfirmMCPforProcessingRequest(PatchClient.MCPSvc.AuthHeader AuthHeader, string sSerial, int iMCPID) {
            this.AuthHeader = AuthHeader;
            this.sSerial = sSerial;
            this.iMCPID = iMCPID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConfirmMCPforProcessingResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ConfirmMCPforProcessingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public PatchClient.MCPSvc.ConfirmMCPResponse ConfirmMCPforProcessingResult;
        
        public ConfirmMCPforProcessingResponse() {
        }
        
        public ConfirmMCPforProcessingResponse(PatchClient.MCPSvc.ConfirmMCPResponse ConfirmMCPforProcessingResult) {
            this.ConfirmMCPforProcessingResult = ConfirmMCPforProcessingResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MCPSvcSoapChannel : PatchClient.MCPSvc.MCPSvcSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MCPSvcSoapClient : System.ServiceModel.ClientBase<PatchClient.MCPSvc.MCPSvcSoap>, PatchClient.MCPSvc.MCPSvcSoap {
        
        public MCPSvcSoapClient() {
        }
        
        public MCPSvcSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MCPSvcSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MCPSvcSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MCPSvcSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PatchClient.MCPSvc.GetMCPManifestResponse PatchClient.MCPSvc.MCPSvcSoap.GetMCPManifest(PatchClient.MCPSvc.GetMCPManifestRequest request) {
            return base.Channel.GetMCPManifest(request);
        }
        
        public PatchClient.MCPSvc.MCPManifestResponse GetMCPManifest(PatchClient.MCPSvc.AuthHeader AuthHeader, string sSerialNumber) {
            PatchClient.MCPSvc.GetMCPManifestRequest inValue = new PatchClient.MCPSvc.GetMCPManifestRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.sSerialNumber = sSerialNumber;
            PatchClient.MCPSvc.GetMCPManifestResponse retVal = ((PatchClient.MCPSvc.MCPSvcSoap)(this)).GetMCPManifest(inValue);
            return retVal.GetMCPManifestResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PatchClient.MCPSvc.GetMCPManifestResponse> PatchClient.MCPSvc.MCPSvcSoap.GetMCPManifestAsync(PatchClient.MCPSvc.GetMCPManifestRequest request) {
            return base.Channel.GetMCPManifestAsync(request);
        }
        
        public System.Threading.Tasks.Task<PatchClient.MCPSvc.GetMCPManifestResponse> GetMCPManifestAsync(PatchClient.MCPSvc.AuthHeader AuthHeader, string sSerialNumber) {
            PatchClient.MCPSvc.GetMCPManifestRequest inValue = new PatchClient.MCPSvc.GetMCPManifestRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.sSerialNumber = sSerialNumber;
            return ((PatchClient.MCPSvc.MCPSvcSoap)(this)).GetMCPManifestAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PatchClient.MCPSvc.UpdateMCPStateResponse PatchClient.MCPSvc.MCPSvcSoap.UpdateMCPState(PatchClient.MCPSvc.UpdateMCPStateRequest request) {
            return base.Channel.UpdateMCPState(request);
        }
        
        public PatchClient.MCPSvc.MCPStatusResponse UpdateMCPState(PatchClient.MCPSvc.AuthHeader AuthHeader, string sSerialNumber, int iMCPID, PatchClient.MCPSvc.MCPStatus sState) {
            PatchClient.MCPSvc.UpdateMCPStateRequest inValue = new PatchClient.MCPSvc.UpdateMCPStateRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.sSerialNumber = sSerialNumber;
            inValue.iMCPID = iMCPID;
            inValue.sState = sState;
            PatchClient.MCPSvc.UpdateMCPStateResponse retVal = ((PatchClient.MCPSvc.MCPSvcSoap)(this)).UpdateMCPState(inValue);
            return retVal.UpdateMCPStateResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PatchClient.MCPSvc.UpdateMCPStateResponse> PatchClient.MCPSvc.MCPSvcSoap.UpdateMCPStateAsync(PatchClient.MCPSvc.UpdateMCPStateRequest request) {
            return base.Channel.UpdateMCPStateAsync(request);
        }
        
        public System.Threading.Tasks.Task<PatchClient.MCPSvc.UpdateMCPStateResponse> UpdateMCPStateAsync(PatchClient.MCPSvc.AuthHeader AuthHeader, string sSerialNumber, int iMCPID, PatchClient.MCPSvc.MCPStatus sState) {
            PatchClient.MCPSvc.UpdateMCPStateRequest inValue = new PatchClient.MCPSvc.UpdateMCPStateRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.sSerialNumber = sSerialNumber;
            inValue.iMCPID = iMCPID;
            inValue.sState = sState;
            return ((PatchClient.MCPSvc.MCPSvcSoap)(this)).UpdateMCPStateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PatchClient.MCPSvc.ConfirmMCPforProcessingResponse PatchClient.MCPSvc.MCPSvcSoap.ConfirmMCPforProcessing(PatchClient.MCPSvc.ConfirmMCPforProcessingRequest request) {
            return base.Channel.ConfirmMCPforProcessing(request);
        }
        
        public PatchClient.MCPSvc.ConfirmMCPResponse ConfirmMCPforProcessing(PatchClient.MCPSvc.AuthHeader AuthHeader, string sSerial, int iMCPID) {
            PatchClient.MCPSvc.ConfirmMCPforProcessingRequest inValue = new PatchClient.MCPSvc.ConfirmMCPforProcessingRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.sSerial = sSerial;
            inValue.iMCPID = iMCPID;
            PatchClient.MCPSvc.ConfirmMCPforProcessingResponse retVal = ((PatchClient.MCPSvc.MCPSvcSoap)(this)).ConfirmMCPforProcessing(inValue);
            return retVal.ConfirmMCPforProcessingResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<PatchClient.MCPSvc.ConfirmMCPforProcessingResponse> PatchClient.MCPSvc.MCPSvcSoap.ConfirmMCPforProcessingAsync(PatchClient.MCPSvc.ConfirmMCPforProcessingRequest request) {
            return base.Channel.ConfirmMCPforProcessingAsync(request);
        }
        
        public System.Threading.Tasks.Task<PatchClient.MCPSvc.ConfirmMCPforProcessingResponse> ConfirmMCPforProcessingAsync(PatchClient.MCPSvc.AuthHeader AuthHeader, string sSerial, int iMCPID) {
            PatchClient.MCPSvc.ConfirmMCPforProcessingRequest inValue = new PatchClient.MCPSvc.ConfirmMCPforProcessingRequest();
            inValue.AuthHeader = AuthHeader;
            inValue.sSerial = sSerial;
            inValue.iMCPID = iMCPID;
            return ((PatchClient.MCPSvc.MCPSvcSoap)(this)).ConfirmMCPforProcessingAsync(inValue);
        }
    }
}
